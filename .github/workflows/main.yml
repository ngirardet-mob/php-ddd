# This is a basic workflow to help you get started with Actions

name: Compatibility with PHP 8.0+

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, release/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.0', '8.1']
        phpunit-versions: ['latest']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      #- name: Environment debug
      #  run: php -v && ls -la $(which php)*

      # Runs a single command using the runners shell
      #- name: Validate composer
      #  run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Running test with PHP ${{ matrix.php-versions }}
        run: /usr/bin/php${{ matrix.php-versions }} ./vendor/phpunit/phpunit/phpunit --configuration ./phpunit.xml.dist

